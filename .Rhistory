colleges = read.csv(College.csv)
colleges = read.csv("College.csv")
library(ISLR)
colleges = data(College)
head(colleges)
data(College)
college = read.csv("college.csv", header=T)
attach(College)
head(College)
colleges=College
head(colleges)
college=College
fix(college)
llege)=college[,1]
fix(college
rownames(college)=college[,1]
fix(college)
rownames(college)=college[,1]
fix(college)
rownames(college)=college[,1]
fix(college)
college=college[,-1]
fix(college)
fix(college)
college=college[,-1]
fix(college)
data(College)
college=College
fix(college)
rownames(college)=college[,1]
rownames(college)=college[,1]
ls()
fix(college)
rm(list=ls())
data(College)
college=College
fix(college)
rownames(college)=college[,1]
fix(college)
college=college[,-1]
fix(college)
data(College)
library(ISLR)
data(College)
college=College
fix(college)
rownames(college)=college[,1]
fix(college)
summary(college)
pairs(college)
pairs(college[,1:10])
str(college$Private)
plot?
?plot
?plot
plot(college$Private, college$Outstate, col = c(2,3), varwidth=T, xlab="Elite University", ylab="Out of State Tuition in USD", main="Outstate Tuition plot")
plot(college$Private, college$Outstate, col = c(2,3), varwidth=T, xlab="Elite University", ylab="Out of State Tuition in USD", main="Outstate Tuition plot")
plot(college$Private, college$Outstate, col = c(2,3), varwidth=T, xlab="Private University", ylab="Out of State Tuition in USD", main="Outstate Tuition plot")
Elite=rep("No",nrow(college))
head(college, 5)
Elite[college$Top10perc>50]="Yes"
head(college,5)
Elite=as.factor(Elite)
head(college,5)
college=data.frame(college,Elite)
head(college,5)
plot(collge$Elite, collge$Outstate, col=c(2,3), varwidth=T, xlab="Elite University", ylab="Out of state Tuition in USD", main = "Outstage Tuition plot")
plot(collge$Elite, collge$Outstate, col=c(2,3), varwidth=T, xlab="Elite University", ylab="Out of state Tuition in USD", main = "Outstage Tuition plot")
plot(college$Elite, college$Outstate, col=c(2,3), varwidth=T, xlab="Elite University", ylab="Out of state Tuition in USD", main = "Outstage Tuition plot")
par(mfrow=c(2,2))
hist(college$Books, col=2, breaks=50, xlab="Books", ylab="Count")
hist(college$PHD, col=3, breaks=50, xlab="PhD", ylab="Count")
hist(college$Grad.Rate, col=4, breaks=50, xlab="Grad Rate", ylab="Count")
hist(college$perc.alumni, col=6, breaks=50, xlab="% alumni who donate", ylab="Count")
hist(college$PhD, col=3, breaks=50, xlab="PhD", ylab="Count")
summary(collge$PhD)
summary(college$PhD)
nrow(subset=college[college$PhD==103,])
nrow(subset1=college[college$PhD==103,])
nrow(subset1<-college[college$PhD==103,])
row.names(subset1)
basicdata_raw = read.csv("raw/basic.csv")
setwd('/Users/cgarvey/Documents/NBA/bball/')
library(plyr)
library(ggplot2)
library(scatterplot3d)
basicdata_raw = read.csv("raw/basic.csv")
advdata_raw = read.csv("raw/advanced.csv")
View(advdata_raw)
basicdata_raw = read.csv("raw/basic.csv")
advdata_raw = read.csv("raw/advanced.csv")
basicdata = basicdata_raw[ !( grepl("DNP", basicdata_raw$FG) ), ]
advdata = advdata_raw[ !( grepl("DNP", advdata_raw$TS.) ), ]
for(i in 3:21) {
basicdata[,i] <- as.numeric(as.character(basicdata[,i]))
}
for(i in 3:14) {
advdata[,i] <- as.numeric(as.character(advdata[,i]))
}
for(i in c(1:2,22:ncol(basicdata))) {
basicdata[,i] <- as.character(basicdata[,i])
}
for(i in c(1:2,15:ncol(advdata))) {
advdata[,i] <- as.character(advdata[,i])
}
head(basicdata)
remove_end <- function(time){
pattern <- "^([0-5][0-9]:[0-5][0-9])"
short_time = regexpr(pattern, time)
regmatches(time, short_time)
}
basicdata[,2] <- sapply(basicdata[,2], function(x) ifelse(nchar(x)>5, remove_end(x), x))
# Extract the minutes and seconds from the MP column and create new columns for minutes and seconds
get_minutes <- function(time){
minutes_pattern = "^([0-9]{1,2})"
minutes = regexpr(minutes_pattern, time)
regmatches(time, minutes)
}
get_seconds <- function(time){
seconds_pattern = "([0-9]{1,2})$"
seconds = regexpr(seconds_pattern, time)
regmatches(time, seconds)
}
basicdata$seconds <- apply(basicdata,1,function(row) sum(as.numeric(get_minutes(row[2]))*60, as.numeric(get_seconds(row[2]))))
basicdata$minutes <- basicdata$seconds / 60
basicdata$ppm <- basicdata$PTS/basicdata$minutes
basicdata$playergame <- paste(basicdata$PLAYER, basicdata$GAME)
advdata$playergame <- paste(advdata$PLAYER, advdata$GAME)
# Drop columns in advanced data that will be redundant
advdrops <- c("PLAYER","GAME","HOME.AWAY", "MP", "OPP", "SEASON", "TEAM")
advdata <- advdata[,!(names(advdata) %in% advdrops)]
#Join basic and advanced data to get table of total information
fulldata = merge(basicdata, advdata, by="playergame")
nrow(fulldata)
nrow(advdata)
nrow(basicdata)
head(fulldata)
names(fulldata)
boxscores = fulldata
head(boxscores,10)
# Player stats per game
player_per_game = ddply(fulldata, .(PLAYER), numcolwise(mean, na.rm = TRUE))
head(player_per_game)
setwd('/Users/cgarvey/Documents/NBA/bball/')
library(plyr)
library(ggplot2)
library(scatterplot3d)
basicdata_raw = read.csv("raw/basic.csv")
advdata_raw = read.csv("raw/advanced.csv")
# Remove DNPs
basicdata = basicdata_raw[ !( grepl("DNP", basicdata_raw$FG) ), ]
advdata = advdata_raw[ !( grepl("DNP", advdata_raw$TS.) ), ]
# Change numeric columns to numeric
# basic
for(i in 3:21) {
basicdata[,i] <- as.numeric(as.character(basicdata[,i]))
}
# advanced
for(i in 3:14) {
advdata[,i] <- as.numeric(as.character(advdata[,i]))
}
# Change string columns to character
for(i in c(1:2,22:ncol(basicdata))) {
basicdata[,i] <- as.character(basicdata[,i])
}
for(i in c(1:2,15:ncol(advdata))) {
advdata[,i] <- as.character(advdata[,i])
}
# Summary data
lapply(advdata, class)
nrow(advdata)
nrow(basicdata)
head(basicdata)
tail(advdata[,2])
# Remove extra parts of time
remove_end <- function(time){
pattern <- "^([0-5][0-9]:[0-5][0-9])"
short_time = regexpr(pattern, time)
regmatches(time, short_time)
}
basicdata[,2] <- sapply(basicdata[,2], function(x) ifelse(nchar(x)>5, remove_end(x), x))
# Extract the minutes and seconds from the MP column and create new columns for minutes and seconds
get_minutes <- function(time){
minutes_pattern = "^([0-9]{1,2})"
minutes = regexpr(minutes_pattern, time)
regmatches(time, minutes)
}
get_seconds <- function(time){
seconds_pattern = "([0-9]{1,2})$"
seconds = regexpr(seconds_pattern, time)
regmatches(time, seconds)
}
basicdata$seconds <- apply(basicdata,1,function(row) sum(as.numeric(get_minutes(row[2]))*60, as.numeric(get_seconds(row[2]))))
names(fulldata)
head(fulldata)
setwd('/Users/cgarvey/Documents/NBA/bball/')
library(plyr)
library(ggplot2)
library(scatterplot3d)
library(reshape)
boxscores = read.csv("stats/boxscores.csv")
player_per_game = read.csv("stats/player_per_game.csv")
player_per_game_by_season = read.csv("stats/player_per_game_by_season.csv")
player_per_game_by_season_team = read.csv("stats/player_per_game_by_season_team.csv")
team_per_game = read.csv("stats/team_per_game.csv")
team_per_game_by_season = read.csv("stats/team_per_game_by_season.csv")
home_v_away_per_game = read.csv("stats/home_v_away_per_game.csv")
home_v_away_per_game_by_season = read.csv("stats/home_v_away_per_game_by_season.csv")
player_info = read.csv("stats/player_info.csv")
player_salaries = read.csv("stats/player_salaries.csv")
player_salaries_by_season = read.csv("stats/player_salaries_by_season.csv")
team_salaries = read.csv("stats/team_salaries.csv")
team_salaries_by_season = read.csv("stats/team_salaries_by_season.csv")
team_stats_by_season = read.csv("stats/team_stats_by_season.csv")
duncan_box = subset(boxscores, PLAYER=="duncati01")
garnett_box = subset(boxscores, PLAYER=="garneke01")
head(duncan_box)
both_career = subset(player_per_game, PLAYER=="duncati01"|"garneke01")
both_career = subset(player_per_game, PLAYER=="duncati01"||PLAYER=="garneke01")
head(both_career)
both_career = subset(player_per_game, PLAYER=="duncati01"|PLAYER=="garneke01")
head(both_career)
head(player_info)
both_info = subset(player_info, id=="duncati01"|id=="garneke01")
head(both_info)
player_info = read.csv("stats/player_info.csv")
both_info = subset(player_info, id=="duncati01"|id=="garneke01")
head(both_info)
both_box = subset(boxscores, PLAYER=="duncati01"||PLAYER=="garneke01")
head(both_box)
both_box = subset(boxscores, PLAYER=="duncati01"|PLAYER=="garneke01")
head(both_box)
both_first_five = subset(player_info, id=="duncati01" & season<2003 | id=="garneke01" & season<2003)
both_first_five = subset(player_info, id=="duncati01" & SEASON<2003 | id=="garneke01" & SEASON<2003)
both_first_five = subset(both_box, PLAYER=="duncati01" & SEASON<2003 | PLAYER=="garneke01" & SEASON<2003)
player_per_game = ddply(both_first_five, .(PLAYER), numcolwise(mean, na.rm = TRUE))
ppg_first_five = ddply(both_first_five, .(PLAYER), numcolwise(mean, na.rm = TRUE))
head(ppg_first_five)
head(player_salaries_by_season)
both_salary = subset(player_salaries_by_season, id=="duncati01"|id=="garneke01")
head(both_salary)
head(both_salary,40)
head(both_box)
playerfull <- merge(box_box, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
playerfull <- merge(both_box, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
first_five_w_salaries <- merge(ppg_first_five, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
head(first_five_w_salaries)
head(ppg_first_five)
both_first_five_by_season = ddply(both_first_five_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
both_first_five_box = subset(both_box, PLAYER=="duncati01" & SEASON<2003 | PLAYER=="garneke01" & SEASON<2003)
both_first_five_by_season = ddply(both_first_five_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
playerfull <- merge(both_first_five_by_season, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
head(player_first_five)
player_first_five <- merge(both_first_five_by_season, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
head(player_first_five)
head(ppg_first_five, 10)
head(player_first_five, 10)
both_by_season = ddply(both_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
head(both_by_season_50)
head(both_by_season,50)
head(team_stats_by_season)
player_first_five <- merge(both_by_season, team_stats_by_season, by.x=c("team", "SEASON"), by.y=c("team", "season"))
player_first_five <- merge(both_by_season, team_stats_by_season, by.x=c("team", "SEASON"), by.y=c("team", "season"))
head(both_by_season,50)
head(player_first_five, 10)
player_first_five_team <- merge(player_first_five, team_stats_by_season, by.x=c("team", "SEASON"), by.y=c("team", "season"))
head(player_first_five_team)
head(player_first_five_team, 10)
both_first_five_box = subset(both_box, PLAYER=="duncati01" & SEASON<2003 | PLAYER=="garneke01" & SEASON<2000)
both_first_five_by_season = ddply(both_first_five_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
player_first_five <- merge(both_first_five_by_season, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
player_first_five_team <- merge(player_first_five, team_stats_by_season, by.x=c("team", "SEASON"), by.y=c("team", "season"))
head(player_first_five_team, 10)
both_first_five_box = subset(both_box, PLAYER=="duncati01" & SEASON<2003 | PLAYER=="garneke01" & SEASON<2001)
both_first_five_by_season = ddply(both_first_five_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
player_first_five <- merge(both_first_five_by_season, both_salary, by.x=c("PLAYER", "SEASON"), by.y=c("id", "season"))
player_first_five_team <- merge(player_first_five, team_stats_by_season, by.x=c("team", "SEASON"), by.y=c("team", "season"))
head(player_first_five_team, 10)
head(player_first_five_team, 10)
head(player_first_five, 10)
both_by_season = ddply(both_box, .(PLAYER, SEASON), numcolwise(mean, na.rm = TRUE))
head(both_by_season,50)
head(player_first_five, 10)
a <- ggplot(data = player_first_five, aes(x = SEASON, y = PTS, col = PLAYER))
a <- a + geom_point()
a <- a + xlab("Season") + ylab("Pts") + ggtitle("Points by season")
a# We can also take a look at their teams success in that time by merging the team_stats_by_season dataset.
a <- a + geom_point(size = 5)
a
b <- ggplot(data = player_first_five, aes(x = SEASON, y = TRB, col = PLAYER))
b <- b + geom_point(size = 5)
b <- b + xlab("Season") + ylab("Rebs") + ggtitle("Rebs by season")
b
c <- ggplot(data = player_first_five, aes(x = DRtg, y = TRB, col = PLAYER))
c <- b + geom_point(size = 5)
c <- b + xlab("Season") + ylab("DRtg") + ggtitle("DRtg by season")
c
c <- ggplot(data = player_first_five, aes(x = SEASON, y = DRtg, col = PLAYER))
c <- b + geom_point(size = 5)
c <- b + xlab("Season") + ylab("DRtg") + ggtitle("DRtg by season")
c
c <- ggplot(data = player_first_five, aes(x = SEASON, y = DRtg, col = PLAYER))
c <- b + geom_point(size = 5)
c <- b + xlab("Season") + ylab("DRtg") + ggtitle("DRtg by season")
c <- ggplot(data = player_first_five, aes(x = SEASON, y = DRtg, col = PLAYER))
c <- c + geom_point(size = 5)
c <- c + xlab("Season") + ylab("DRtg") + ggtitle("DRtg by season")
c
par(mfrow=c(2,2))
a
b
c
multiplot(a, b, c,  cols=2)
library(ggplot2)
multiplot(a, b, c,  cols=2)
library(gridExtra)
grid.arrange(a, b, c,  ncols=2)
grid.arrange(a, b, c, d, ncols=2)
grid.arrange(a, b, c, , ncols=2)
grid.arrange(a, b, c, ncols=2)
grid.arrange(a, b, c, ncol=2)
head(player_first_five, 10)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = BLK, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = STL, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = AST, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = salary, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = wpercent, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = percent, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five, aes(x = SEASON, y = percent, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
d <- ggplot(data = player_first_five_team, aes(x = SEASON, y = percent, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
head(player_first_five_team)
d <- ggplot(data = player_first_five_team, aes(x = SEASON, y = percent_w, col = PLAYER))
d <- d + geom_point(size = 5)
d <- d + xlab("Season") + ylab("Blocks") + ggtitle("Blocks by season")
d
grid.arrange(a, b, c, d, ncol=2)
total_salaries = ddply(both_salary, .(PLAYER), numcolwise(sum, na.rm = TRUE))
head(both_salary,40)
total_salaries = ddply(id, .(PLAYER), numcolwise(sum, na.rm = TRUE))
total_salaries = ddply(id, .(PLAYER), numcolwise(sum))
total_salaries = ddply(id, .(PLAYER), summarize, feq=length(PLAYER), total=sum(salary))
total_salaries = ddply(both_salary, .(id), summarize, feq=length(PLAYER), total=sum(salary))
total_salaries = ddply(both_salary, .(id), summarize, feq=length(id), total=sum(salary))
head(total_salaries)
